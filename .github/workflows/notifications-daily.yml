name: Notification Testing (Every Minute)

on:
  schedule:
    # TESTING: Run every minute for testing purposes
    # TODO: Change back to daily after testing: '0 9 * * *'
    - cron: '* * * * *'

  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:

jobs:
  notification-batch:
    runs-on: ubuntu-latest
    name: Test notification system (runs every minute)

    steps:
      - name: 🔔 Daily Notification System
        run: |
          echo "🕘 Starting daily notifications at $(date)"
          echo "📱 Running subscription expiry, inactive user, and new content notifications"

          # Check for new video content in the last 24 hours and send notifications
          echo "📹 Checking for new video content published in last 24 hours..."
          new_content_response=$(curl -s -w "\n%{http_code}" -X POST \
            "${{ secrets.SUPABASE_URL }}/functions/v1/unified-notifications" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
            -H "apikey: ${{ secrets.SUPABASE_ANON_KEY }}" \
            -H "Content-Type: application/json" \
            -H "x-client-info: github-cron-daily" \
            -d '{
              "check_hours": 24
            }')

          # Test subscription expiry notifications
          echo "⏰ Checking subscription expiry notifications..."
          expiry_response=$(curl -s -w "\n%{http_code}" -X POST \
            "${{ secrets.SUPABASE_URL }}/rest/v1/rpc/trigger_subscription_expiry_check" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json")

          # Test inactive user notifications
          echo "👥 Checking inactive user notifications..."
          inactive_response=$(curl -s -w "\n%{http_code}" -X POST \
            "${{ secrets.SUPABASE_URL }}/rest/v1/rpc/trigger_inactive_user_notification" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "apikey: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json")

          # Extract and display content check results
          content_http_code=$(echo "$new_content_response" | tail -n1)
          content_response_body=$(echo "$new_content_response" | head -n -1)

          echo "📊 Content Check Response Code: $content_http_code"
          echo "📄 Content Check Response: $content_response_body"

          if [ "$content_http_code" = "200" ]; then
            echo "✅ New content check completed successfully!"
          else
            echo "❌ New content check failed with code: $content_http_code"
            echo "Error details: $content_response_body"
          fi

          echo "🏁 Notification test completed at $(date)"

      - name: 📊 Test Summary
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Notification system test completed successfully"
            echo "📱 Check Supabase database for new test notifications"
            echo "🔄 Next test will run in 1 minute"
            echo "⚠️ REMEMBER: Change cron back to daily after testing!"
          else
            echo "❌ Notification test failed - check logs above"
            echo "⚠️ Admin should review the error and fix any issues"
          fi

      - name: 🧹 Test Status
        if: success()
        run: |
          echo "🧪 This is TESTING MODE - running every minute"
          echo "📧 Check Supabase Edge Function logs for detailed insights"
          echo "📋 Monitor user_notifications table for new entries"
          echo "⚠️ TODO: Change cron schedule back to daily after testing"